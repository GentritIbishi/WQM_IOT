{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sensor-data.service\";\nimport * as i2 from \"@angular/common\";\nfunction AiRiskAlertsComponent_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\", 7)(18, \"span\", 8);\n    i0.ɵɵtext(19, \"Anomaly\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.temperature);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.ph);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.flow);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.turbidity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.latitude);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.longitude);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.timestamp);\n  }\n}\nexport class AiRiskAlertsComponent {\n  sensorDataService;\n  sensorData = [];\n  prediction = 0; // Default prediction value\n  constructor(sensorDataService) {\n    this.sensorDataService = sensorDataService;\n  }\n  ngOnInit() {\n    // Automatically fetch data with prediction = 2\n    this.fetchSensorDataByPrediction(2);\n  }\n  fetchSensorDataByPrediction(prediction) {\n    this.sensorDataService.getSensorDataByPrediction(prediction).subscribe({\n      next: data => {\n        this.sensorData = data;\n      },\n      error: err => {\n        console.error('Error fetching sensor data by prediction:', err);\n      }\n    });\n  }\n  static ɵfac = function AiRiskAlertsComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AiRiskAlertsComponent)(i0.ɵɵdirectiveInject(i1.SensorDataService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AiRiskAlertsComponent,\n    selectors: [[\"app-ai-risk-alerts\"]],\n    decls: 36,\n    vars: 1,\n    consts: [[1, \"mb-4\"], [1, \"card\", \"mb-4\"], [1, \"card-header\", \"bg-danger\", \"text-white\"], [1, \"card-body\"], [1, \"table-responsive\"], [1, \"table\", \"table-bordered\", \"table-hover\", \"table-alert\"], [4, \"ngFor\", \"ngForOf\"], [\"id\", \"prediction\"], [1, \"badge\", \"bg-danger\"]],\n    template: function AiRiskAlertsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"AI Risk Alerts\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"div\", 2);\n        i0.ɵɵtext(4, \"WARNING!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"p\", 0)(7, \"b\");\n        i0.ɵɵtext(8, \"Warning:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(9, \" There may be a potential system issue or a malfunctioning sensor. Immediate inspection required! \");\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵtext(11, \" Please check the affected sensors and system components as soon as possible to ensure accurate data and avoid further issues. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"table\", 5)(14, \"thead\")(15, \"tr\")(16, \"th\");\n        i0.ɵɵtext(17, \"ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"Temperature\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"pH\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Flow\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\");\n        i0.ɵɵtext(25, \"Turbidity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"th\");\n        i0.ɵɵtext(27, \"Latitude\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"th\");\n        i0.ɵɵtext(29, \"Longitude\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"th\");\n        i0.ɵɵtext(31, \"Timestamp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"th\");\n        i0.ɵɵtext(33, \"Prediction\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(34, \"tbody\");\n        i0.ɵɵtemplate(35, AiRiskAlertsComponent_tr_35_Template, 20, 8, \"tr\", 6);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(35);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sensorData);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".card[_ngcontent-%COMP%] {\\n  border-radius: 8px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n.card-header[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  color: white;\\n  font-weight: bold;\\n  font-size: 1.25rem;\\n}\\n.card-body[_ngcontent-%COMP%] {\\n  padding: 1.5rem;\\n  background-color: rgb(255, 0, 24);\\n  color: white;\\n}\\n\\n.input-group[_ngcontent-%COMP%] {\\n  max-width: 500px;\\n  margin-bottom: 20px;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  background-color: #007bff;\\n  border-color: #007bff;\\n}\\n.btn-primary[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n  border-color: #004085;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n}\\n.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%] {\\n  border-radius: 20px;\\n}\\n.table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  text-align: center;\\n  background-color: rgb(255, 0, 24);\\n  color: white;\\n}\\n.table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td.badge[_ngcontent-%COMP%] {\\n  font-size: 0.9em;\\n  padding: 0.5rem;\\n}\\n\\n.badge.bg-danger[_ngcontent-%COMP%] {\\n  background-color: #dc3545;\\n}\\n.badge.bg-success[_ngcontent-%COMP%] {\\n  background-color: #28a745;\\n}\\n.badge.bg-warning[_ngcontent-%COMP%] {\\n  background-color: #ffc107;\\n  color: #212529;\\n}\\n\\n.table-responsive[_ngcontent-%COMP%] {\\n  max-height: 400px;\\n  overflow-y: auto;\\n}\\n\\nh1[_ngcontent-%COMP%] {\\n  font-size: 1.75rem;\\n  font-weight: bold;\\n  margin-bottom: 1.5rem;\\n}\\n\\n#prediction[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWktcmlzay1hbGVydHMvYWktcmlzay1hbGVydHMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0E7RUFDRSxrQkFBQTtFQUNBLHdDQUFBO0FBTkY7QUFRRTtFQUNFLHlCQVhZO0VBWVosWUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7QUFOSjtBQVNFO0VBQ0UsZUFBQTtFQUNBLGlDQUFBO0VBQ0EsWUFBQTtBQVBKOztBQVlBO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQVRGOztBQWFBO0VBQ0UseUJBaENjO0VBaUNkLHFCQWpDYztBQXVCaEI7QUFZRTtFQUNFLHlCQW5DaUI7RUFvQ2pCLHFCQW5DbUI7QUF5QnZCOztBQWVBO0VBQ0UsZ0JBQUE7QUFaRjtBQWNFO0VBQ0UsbUJBQUE7QUFaSjtBQWFJO0VBQ0Usa0JBQUE7RUFDQSxpQ0FBQTtFQUNBLFlBQUE7QUFYTjtBQWtCUTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQWhCVjs7QUF5QkU7RUFDRSx5QkFBQTtBQXRCSjtBQXlCRTtFQUNFLHlCQUFBO0FBdkJKO0FBMEJFO0VBQ0UseUJBQUE7RUFDQSxjQUFBO0FBeEJKOztBQTZCQTtFQUNFLGlCQUFBO0VBQ0EsZ0JBQUE7QUExQkY7O0FBOEJBO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtFQUNBLHFCQUFBO0FBM0JGOztBQThCQTtFQUNFLGtCQUFBO0FBM0JGIiwic291cmNlc0NvbnRlbnQiOlsiLy8gVmFyaWFibGVzIGZvciBjb2xvcnNcbiRwcmltYXJ5LWNvbG9yOiAjMDA3YmZmO1xuJHByaW1hcnktZGFyay1jb2xvcjogIzAwNTZiMztcbiRwcmltYXJ5LWJvcmRlci1jb2xvcjogIzAwNDA4NTtcbiRjYXJkLXNoYWRvdy1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xuXG4vLyBDYXJkIHN0eWxpbmdcbi5jYXJkIHtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggJGNhcmQtc2hhZG93LWNvbG9yO1xuXG4gICYtaGVhZGVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICB9XG5cbiAgJi1ib2R5IHtcbiAgICBwYWRkaW5nOiAxLjVyZW07XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSAwIDI0KTtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbn1cblxuLy8gSW5wdXQgZ3JvdXAgc3R5bGluZ1xuLmlucHV0LWdyb3VwIHtcbiAgbWF4LXdpZHRoOiA1MDBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLy8gQnV0dG9uIHN0eWxpbmdcbi5idG4tcHJpbWFyeSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuICBib3JkZXItY29sb3I6ICRwcmltYXJ5LWNvbG9yO1xuXG4gICY6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICRwcmltYXJ5LWRhcmstY29sb3I7XG4gICAgYm9yZGVyLWNvbG9yOiAkcHJpbWFyeS1ib3JkZXItY29sb3I7XG4gIH1cbn1cblxuLy8gVGFibGUgc3R5bGluZ1xuLnRhYmxlIHtcbiAgbWFyZ2luLXRvcDogMjBweDtcblxuICB0aGVhZCB7XG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcbiAgICB0aCB7XG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1IDAgMjQpO1xuICAgICAgY29sb3I6IHdoaXRlO1xuICAgIH1cbiAgfVxuXG4gIHRib2R5IHtcbiAgICB0ciB7XG4gICAgICB0ZCB7XG4gICAgICAgICYuYmFkZ2Uge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMC45ZW07XG4gICAgICAgICAgcGFkZGluZzogMC41cmVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbi8vIEJhZGdlIGNvbG9ycyBiYXNlZCBvbiBzdGF0dXNcbi5iYWRnZSB7XG4gICYuYmctZGFuZ2VyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGMzNTQ1O1xuICB9XG5cbiAgJi5iZy1zdWNjZXNzIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1O1xuICB9XG5cbiAgJi5iZy13YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZjMTA3O1xuICAgIGNvbG9yOiAjMjEyNTI5OyAvLyBEYXJrIHRleHQgZm9yIGNvbnRyYXN0XG4gIH1cbn1cblxuLy8gUmVzcG9uc2l2ZSB0YWJsZSBjb250YWluZXJcbi50YWJsZS1yZXNwb25zaXZlIHtcbiAgbWF4LWhlaWdodDogNDAwcHg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG59XG5cbi8vIFRpdGxlIHN0eWxpbmdcbmgxIHtcbiAgZm9udC1zaXplOiAxLjc1cmVtO1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xufVxuXG4jcHJlZGljdGlvbiB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","data_r1","id","temperature","ph","flow","turbidity","latitude","longitude","timestamp","AiRiskAlertsComponent","sensorDataService","sensorData","prediction","constructor","ngOnInit","fetchSensorDataByPrediction","getSensorDataByPrediction","subscribe","next","data","error","err","console","ɵɵdirectiveInject","i1","SensorDataService","selectors","decls","vars","consts","template","AiRiskAlertsComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","AiRiskAlertsComponent_tr_35_Template","ɵɵproperty"],"sources":["/Users/gentritibishi/IdeaProjects/WQM_IOT/src/app/ai-risk-alerts/ai-risk-alerts.component.ts","/Users/gentritibishi/IdeaProjects/WQM_IOT/src/app/ai-risk-alerts/ai-risk-alerts.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {SensorData, SensorDataService} from \"../services/sensor-data.service\";\n\n@Component({\n  selector: 'app-ai-risk-alerts',\n  templateUrl: './ai-risk-alerts.component.html',\n  styleUrl: './ai-risk-alerts.component.scss'\n})\nexport class AiRiskAlertsComponent {\n  sensorData: SensorData[] = [];\n  prediction: number = 0; // Default prediction value\n\n  constructor(private sensorDataService: SensorDataService) { }\n\n  ngOnInit(): void {\n    // Automatically fetch data with prediction = 2\n    this.fetchSensorDataByPrediction(2);\n  }\n\n  fetchSensorDataByPrediction(prediction: number): void {\n    this.sensorDataService.getSensorDataByPrediction(prediction).subscribe({\n      next: data => {\n        this.sensorData = data;\n      },\n      error: err => {\n        console.error('Error fetching sensor data by prediction:', err);\n      }\n    });\n  }\n\n}\n","<h1 class=\"mb-4\">AI Risk Alerts</h1>\n<div class=\"card mb-4\">\n  <div class=\"card-header bg-danger text-white\">WARNING!</div>\n  <div class=\"card-body\">\n    <p class=\"mb-4\">\n      <b>Warning:</b> There may be a potential system issue or a malfunctioning sensor. Immediate inspection required! <br>\n      Please check the affected sensors and system components as soon as possible to ensure accurate data and avoid further issues.    </p>\n\n    <!-- Sensor Data Table -->\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered table-hover table-alert\">\n        <thead>\n        <tr>\n          <th>ID</th>\n          <th>Temperature</th>\n          <th>pH</th>\n          <th>Flow</th>\n          <th>Turbidity</th>\n          <th>Latitude</th>\n          <th>Longitude</th>\n          <th>Timestamp</th>\n          <th>Prediction</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let data of sensorData\">\n          <td>{{ data.id }}</td>\n          <td>{{ data.temperature }}</td>\n          <td>{{ data.ph }}</td>\n          <td>{{ data.flow }}</td>\n          <td>{{ data.turbidity }}</td>\n          <td>{{ data.latitude }}</td>\n          <td>{{ data.longitude }}</td>\n          <td>{{ data.timestamp }}</td>\n          <td id=\"prediction\">\n            <span class=\"badge bg-danger\">Anomaly</span>\n          </td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}