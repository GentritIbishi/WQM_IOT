{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/sensor-data.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng2-charts\";\nfunction StatisticsComponent_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function StatisticsComponent_button_5_Template_button_click_0_listener() {\n      const location_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLocationSelect(location_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const location_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", location_r2.name, \" \");\n  }\n}\nfunction StatisticsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"canvas\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"data\", ctx_r2.pieChartData)(\"type\", \"pie\");\n  }\n}\nfunction StatisticsComponent_ng_template_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"No Data Available\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"canvas\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"data\", ctx_r2.lineChartData)(\"options\", ctx_r2.lineChartOptions)(\"type\", \"line\");\n  }\n}\nfunction StatisticsComponent_ng_template_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1, \"No Data Available\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class StatisticsComponent {\n  sensorDataService;\n  // Locations data\n  locations = [];\n  // Pie chart properties\n  pieChartData = {\n    labels: ['Drinkable', 'Not Drinkable'],\n    // Updated labels\n    datasets: [{\n      data: []\n    }]\n  };\n  hasPieChartData = true; // Flag to track pie chart data\n  // Line chart properties\n  lineChartData = {\n    labels: [],\n    datasets: []\n  };\n  hasLineChartData = true; // Flag to track line chart data\n  lineChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  constructor(sensorDataService) {\n    this.sensorDataService = sensorDataService;\n  }\n  ngOnInit() {\n    // Fetch locations and initialize component\n    this.fetchLocations();\n  }\n  // Function to get the location name by latitude and longitude\n  getAddressByLatitudeAndLongitude(latitude, longitude) {\n    if (latitude === 42.619447 && longitude === 21.234465) {\n      return \"Liqeni I Badovcit\";\n    } else if (latitude === 42.821412 && longitude === 21.308285) {\n      return \"Liqeni I Batllaves\";\n    } else if (latitude === 42.961875 && longitude === 20.570339) {\n      return \"Liqeni I Ujmanit\";\n    } else if (latitude === 42.486777 && longitude === 20.422350) {\n      return \"Liqeni I Radoniqit\";\n    } else {\n      return \"Unknown\";\n    }\n  }\n  // Fetch all unique locations\n  fetchLocations() {\n    this.sensorDataService.getSensorData().subscribe({\n      next: data => {\n        // Extract unique locations from sensor data\n        const uniqueLocations = Array.from(new Set(data.map(sensor => `${sensor.latitude},${sensor.longitude}`))).map(locationKey => {\n          const [latitude, longitude] = locationKey.split(',').map(Number);\n          // Use getAddressByLatitudeAndLongitude to get the appropriate name\n          const locationName = this.getAddressByLatitudeAndLongitude(latitude, longitude);\n          return {\n            name: locationName,\n            latitude,\n            longitude\n          };\n        });\n        this.locations = uniqueLocations;\n        // Automatically select the first location\n        if (this.locations.length > 0) {\n          this.onLocationSelect(this.locations[0]);\n        }\n      },\n      error: err => {\n        console.error('Error fetching locations:', err);\n      }\n    });\n  }\n  // Handle location selection\n  onLocationSelect(location) {\n    this.fetchDataForLocation(location.latitude, location.longitude);\n  }\n  // Fetch data for the selected location\n  fetchDataForLocation(latitude, longitude) {\n    this.sensorDataService.getSensorDataByLocation(latitude, longitude).subscribe({\n      next: data => {\n        // Check if there is data for pie chart\n        const drinkable = data.filter(d => d.prediction === 1).length;\n        const notDrinkable = data.filter(d => d.prediction === 0).length;\n        this.hasPieChartData = drinkable > 0 || notDrinkable > 0; // Check if there is any data\n        this.pieChartData = {\n          labels: ['Drinkable', 'Not Drinkable'],\n          datasets: [{\n            data: this.hasPieChartData ? [drinkable, notDrinkable] : []\n          }]\n        };\n        // Check if there is data for line chart\n        this.hasLineChartData = data.length > 0;\n        this.lineChartData = this.hasLineChartData ? {\n          labels: data.map(d => new Date(d.timestamp).toLocaleString()),\n          datasets: [{\n            data: data.map(d => +d.temperature),\n            label: 'Temperature'\n          }, {\n            data: data.map(d => d.ph),\n            label: 'pH'\n          }, {\n            data: data.map(d => d.turbidity),\n            label: 'Turbidity'\n          }]\n        } : {\n          labels: [],\n          datasets: []\n        };\n      },\n      error: err => {\n        console.error('Error fetching sensor data by location:', err);\n        this.hasPieChartData = false;\n        this.hasLineChartData = false;\n      }\n    });\n  }\n  static ɵfac = function StatisticsComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.SensorDataService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"app-statistics\"]],\n    decls: 19,\n    vars: 5,\n    consts: [[\"noPieData\", \"\"], [\"noLineData\", \"\"], [1, \"card-body\"], [1, \"statistics-container\"], [1, \"location-buttons\"], [\"class\", \"location-btn\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"content-area\"], [1, \"chart-container\", \"pie-chart-container\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"chart-container\", \"line-chart-container\"], [1, \"location-btn\", 3, \"click\"], [\"baseChart\", \"\", 3, \"data\", \"type\"], [1, \"no-data-message\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtemplate(5, StatisticsComponent_button_5_Template, 2, 1, \"button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 6)(7, \"div\", 7)(8, \"h3\");\n        i0.ɵɵtext(9, \"Water Quality Distribution\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, StatisticsComponent_div_10_Template, 2, 2, \"div\", 8)(11, StatisticsComponent_ng_template_11_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 9)(14, \"h3\");\n        i0.ɵɵtext(15, \"Water Quality Over Time\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, StatisticsComponent_div_16_Template, 2, 3, \"div\", 8)(17, StatisticsComponent_ng_template_17_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const noPieData_r4 = i0.ɵɵreference(12);\n        const noLineData_r5 = i0.ɵɵreference(18);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.locations);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasPieChartData)(\"ngIfElse\", noPieData_r4);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasLineChartData)(\"ngIfElse\", noLineData_r5);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.BaseChartDirective],\n    styles: [\".statistics-container[_ngcontent-%COMP%] {\\n  padding: 20px;\\n}\\n\\n.location-buttons[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n  text-align: center;\\n}\\n.location-buttons[_ngcontent-%COMP%]   .location-btn[_ngcontent-%COMP%] {\\n  background-color: #f8f9fa;\\n  border: 1px solid #6c757d;\\n  color: #343a40;\\n  margin: 5px;\\n  padding: 10px 20px;\\n  cursor: pointer;\\n  border-radius: 4px;\\n  transition: background-color 0.3s ease;\\n}\\n.location-buttons[_ngcontent-%COMP%]   .location-btn[_ngcontent-%COMP%]:hover {\\n  background-color: #e2e6ea;\\n}\\n.location-buttons[_ngcontent-%COMP%]   .location-btn[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.25);\\n}\\n\\n.content-area[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between; \\n\\n  gap: 20px; \\n\\n  flex-wrap: nowrap; \\n\\n  \\n\\n  \\n\\n}\\n.content-area[_ngcontent-%COMP%]   .chart-container[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border: 1px solid #6c757d;\\n  border-radius: 5px;\\n  background-color: #ffffff;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  text-align: center;\\n  position: relative; \\n\\n  flex: 1; \\n\\n}\\n.content-area[_ngcontent-%COMP%]   .chart-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  font-size: 1.2rem;\\n  margin-bottom: 10px;\\n  color: #343a40;\\n}\\n.content-area[_ngcontent-%COMP%]   .chart-container[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%] {\\n  max-height: 400px; \\n\\n  width: 100%;\\n  height: 100%;\\n}\\n.content-area[_ngcontent-%COMP%]   .chart-container[_ngcontent-%COMP%]   .no-data-message[_ngcontent-%COMP%] {\\n  color: #dc3545; \\n\\n  font-size: 1.2rem;\\n  position: absolute; \\n\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%); \\n\\n}\\n.content-area[_ngcontent-%COMP%]   .pie-chart-container[_ngcontent-%COMP%] {\\n  max-width: 40%; \\n\\n  flex: 0 0 40%; \\n\\n}\\n.content-area[_ngcontent-%COMP%]   .line-chart-container[_ngcontent-%COMP%] {\\n  max-width: 60%; \\n\\n  flex: 0 0 60%; \\n\\n}\\n\\n@media (max-width: 768px) {\\n  .content-area[_ngcontent-%COMP%] {\\n    flex-direction: column; \\n\\n  }\\n  .chart-container[_ngcontent-%COMP%] {\\n    max-width: 100%;\\n    margin-bottom: 20px; \\n\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtBQUNGOztBQUVBO0VBQ0UsbUJBQUE7RUFDQSxrQkFBQTtBQUNGO0FBQ0U7RUFDRSx5QkFBQTtFQUNBLHlCQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxrQkFBQTtFQUNBLHNDQUFBO0FBQ0o7QUFDSTtFQUNFLHlCQUFBO0FBQ047QUFFSTtFQUNFLGFBQUE7RUFDQSw2Q0FBQTtBQUFOOztBQUtBO0VBQ0UsYUFBQTtFQUNBLDhCQUFBLEVBQUEsa0NBQUE7RUFDQSxTQUFBLEVBQUEsNkJBQUE7RUFDQSxpQkFBQSxFQUFBLDJDQUFBO0VBa0NBLHNCQUFBO0VBTUEsdUJBQUE7QUF4Q0Y7QUFFRTtFQUNFLGFBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7RUFDQSx3Q0FBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUEsRUFBQSx3Q0FBQTtFQUNBLE9BQUEsRUFBQSxvREFBQTtBQUFKO0FBRUk7RUFDRSxpQkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUFOO0FBR0k7RUFDRSxpQkFBQSxFQUFBLGlEQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUFETjtBQUlJO0VBQ0UsY0FBQSxFQUFBLHNDQUFBO0VBQ0EsaUJBQUE7RUFDQSxrQkFBQSxFQUFBLHVDQUFBO0VBQ0EsUUFBQTtFQUNBLFNBQUE7RUFDQSxnQ0FBQSxFQUFBLHVCQUFBO0FBRk47QUFPRTtFQUNFLGNBQUEsRUFBQSx1Q0FBQTtFQUNBLGFBQUEsRUFBQSwrQ0FBQTtBQUxKO0FBU0U7RUFDRSxjQUFBLEVBQUEsNENBQUE7RUFDQSxhQUFBLEVBQUEsZ0RBQUE7QUFQSjs7QUFXQTtFQUNFO0lBQ0Usc0JBQUEsRUFBQSxtREFBQTtFQVJGO0VBV0E7SUFDRSxlQUFBO0lBQ0EsbUJBQUEsRUFBQSx1Q0FBQTtFQVRGO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIuc3RhdGlzdGljcy1jb250YWluZXIge1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG4ubG9jYXRpb24tYnV0dG9ucyB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxuICAubG9jYXRpb24tYnRuIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2Yzc1N2Q7XG4gICAgY29sb3I6ICMzNDNhNDA7XG4gICAgbWFyZ2luOiA1cHg7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XG5cbiAgICAmOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNlMmU2ZWE7XG4gICAgfVxuXG4gICAgJjpmb2N1cyB7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMnB4IHJnYmEoMCwgMTIzLCAyNTUsIDAuMjUpO1xuICAgIH1cbiAgfVxufVxuXG4uY29udGVudC1hcmVhIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOyAvKiBBbGlnbiB0aGUgY2hhcnRzIHNpZGUgYnkgc2lkZSAqL1xuICBnYXA6IDIwcHg7IC8qIFNwYWNlIGJldHdlZW4gdGhlIGNoYXJ0cyAqL1xuICBmbGV4LXdyYXA6IG5vd3JhcDsgLyogUHJldmVudCB3cmFwcGluZyB0byBrZWVwIGNoYXJ0cyBpbmxpbmUgKi9cblxuICAuY2hhcnQtY29udGFpbmVyIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2Yzc1N2Q7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyAvKiBGb3IgY2VudGVyaW5nIHRoZSBcIk5vIERhdGFcIiBtZXNzYWdlICovXG4gICAgZmxleDogMTsgLyogQWxsb3cgYm90aCBjaGFydHMgdG8gdGFrZSBlcXVhbCBzcGFjZSBpbml0aWFsbHkgKi9cblxuICAgIGgzIHtcbiAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgIGNvbG9yOiAjMzQzYTQwO1xuICAgIH1cblxuICAgIGNhbnZhcyB7XG4gICAgICBtYXgtaGVpZ2h0OiA0MDBweDsgLyogQWRqdXN0IHRvIGVuc3VyZSBlbm91Z2ggc3BhY2UgZm9yIHRoZSBjaGFydHMgKi9cbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgIH1cblxuICAgIC5uby1kYXRhLW1lc3NhZ2Uge1xuICAgICAgY29sb3I6ICNkYzM1NDU7IC8qIFJlZCBjb2xvciBmb3IgdGhlIG5vIGRhdGEgbWVzc2FnZSAqL1xuICAgICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IC8qIEFic29sdXRlIHBvc2l0aW9uaW5nIGZvciBjZW50ZXJpbmcgKi9cbiAgICAgIHRvcDogNTAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7IC8qIENlbnRlciB0aGUgbWVzc2FnZSAqL1xuICAgIH1cbiAgfVxuXG4gIC8qIFBpZSBDaGFydCBTZWN0aW9uICovXG4gIC5waWUtY2hhcnQtY29udGFpbmVyIHtcbiAgICBtYXgtd2lkdGg6IDQwJTsgLyogUmVzdHJpY3QgdGhlIHBpZSBjaGFydCdzIG1heCB3aWR0aCAqL1xuICAgIGZsZXg6IDAgMCA0MCU7IC8qIEZpeCB0aGUgcGllIGNoYXJ0IHRvIHRha2UgNDAlIG9mIHRoZSBzcGFjZSAqL1xuICB9XG5cbiAgLyogTGluZSBDaGFydCBTZWN0aW9uICovXG4gIC5saW5lLWNoYXJ0LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiA2MCU7IC8qIEFsbG93IHRoZSBsaW5lIGNoYXJ0IHRvIHRha2UgbW9yZSBzcGFjZSAqL1xuICAgIGZsZXg6IDAgMCA2MCU7IC8qIEZpeCB0aGUgbGluZSBjaGFydCB0byB0YWtlIDYwJSBvZiB0aGUgc3BhY2UgKi9cbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgLmNvbnRlbnQtYXJlYSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgLyogU3RhY2sgdGhlIGNoYXJ0cyB2ZXJ0aWNhbGx5IG9uIHNtYWxsZXIgc2NyZWVucyAqL1xuICB9XG5cbiAgLmNoYXJ0LWNvbnRhaW5lciB7XG4gICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IC8qIEFkZCBzcGFjaW5nIGJldHdlZW4gc3RhY2tlZCBjaGFydHMgKi9cbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","StatisticsComponent_button_5_Template_button_click_0_listener","location_r2","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","onLocationSelect","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","name","ɵɵelement","ɵɵproperty","pieChartData","lineChartData","lineChartOptions","StatisticsComponent","sensorDataService","locations","labels","datasets","data","hasPieChartData","hasLineChartData","responsive","maintainAspectRatio","constructor","ngOnInit","fetchLocations","getAddressByLatitudeAndLongitude","latitude","longitude","getSensorData","subscribe","next","uniqueLocations","Array","from","Set","map","sensor","locationKey","split","Number","locationName","length","error","err","console","location","fetchDataForLocation","getSensorDataByLocation","drinkable","filter","d","prediction","notDrinkable","Date","timestamp","toLocaleString","temperature","label","ph","turbidity","ɵɵdirectiveInject","i1","SensorDataService","selectors","decls","vars","consts","template","StatisticsComponent_Template","rf","ctx","ɵɵtemplate","StatisticsComponent_button_5_Template","StatisticsComponent_div_10_Template","StatisticsComponent_ng_template_11_Template","ɵɵtemplateRefExtractor","StatisticsComponent_div_16_Template","StatisticsComponent_ng_template_17_Template","noPieData_r4","noLineData_r5"],"sources":["/Users/gentritibishi/IdeaProjects/WQM_IOT/src/app/statistics/statistics.component.ts","/Users/gentritibishi/IdeaProjects/WQM_IOT/src/app/statistics/statistics.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ChartData, ChartOptions } from 'chart.js';\nimport { SensorData, SensorDataService } from '../services/sensor-data.service';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss']\n})\nexport class StatisticsComponent implements OnInit {\n  // Locations data\n  locations: { name: string, latitude: number, longitude: number }[] = [];\n\n  // Pie chart properties\n  pieChartData: ChartData<'pie'> = {\n    labels: ['Drinkable', 'Not Drinkable'], // Updated labels\n    datasets: [{ data: [] }]\n  };\n  hasPieChartData: boolean = true; // Flag to track pie chart data\n\n  // Line chart properties\n  lineChartData: ChartData<'line'> = {\n    labels: [],\n    datasets: []\n  };\n  hasLineChartData: boolean = true; // Flag to track line chart data\n\n  lineChartOptions: ChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n\n  constructor(private sensorDataService: SensorDataService) {}\n\n  ngOnInit(): void {\n    // Fetch locations and initialize component\n    this.fetchLocations();\n  }\n\n  // Function to get the location name by latitude and longitude\n  getAddressByLatitudeAndLongitude(latitude: number, longitude: number): string {\n    if (latitude === 42.619447 && longitude === 21.234465) {\n      return \"Liqeni I Badovcit\";\n    } else if (latitude === 42.821412 && longitude === 21.308285) {\n      return \"Liqeni I Batllaves\";\n    } else if (latitude === 42.961875 && longitude === 20.570339) {\n      return \"Liqeni I Ujmanit\";\n    } else if (latitude === 42.486777 && longitude === 20.422350) {\n      return \"Liqeni I Radoniqit\";\n    } else {\n      return \"Unknown\";\n    }\n  }\n\n  // Fetch all unique locations\n  fetchLocations(): void {\n    this.sensorDataService.getSensorData().subscribe(\n      {\n        next: (data: SensorData[]) => {\n          // Extract unique locations from sensor data\n          const uniqueLocations = Array.from(\n            new Set(data.map((sensor) => `${sensor.latitude},${sensor.longitude}`))\n          ).map((locationKey) => {\n            const [latitude, longitude] = locationKey.split(',').map(Number);\n            // Use getAddressByLatitudeAndLongitude to get the appropriate name\n            const locationName = this.getAddressByLatitudeAndLongitude(latitude, longitude);\n\n            return { name: locationName, latitude, longitude };\n          });\n\n          this.locations = uniqueLocations;\n\n          // Automatically select the first location\n          if (this.locations.length > 0) {\n            this.onLocationSelect(this.locations[0]);\n          }\n        },\n        error: (err) => {\n          console.error('Error fetching locations:', err);\n        }\n      });\n  }\n\n  // Handle location selection\n  onLocationSelect(location: { name: string, latitude: number, longitude: number }): void {\n    this.fetchDataForLocation(location.latitude, location.longitude);\n  }\n\n  // Fetch data for the selected location\n  fetchDataForLocation(latitude: number, longitude: number): void {\n    this.sensorDataService.getSensorDataByLocation(latitude, longitude).subscribe({\n      next: (data: SensorData[]) => {\n        // Check if there is data for pie chart\n        const drinkable = data.filter(d => d.prediction === 1).length;\n        const notDrinkable = data.filter(d => d.prediction === 0).length;\n        this.hasPieChartData = drinkable > 0 || notDrinkable > 0; // Check if there is any data\n        this.pieChartData = {\n          labels: ['Drinkable', 'Not Drinkable'],\n          datasets: [{ data: this.hasPieChartData ? [drinkable, notDrinkable] : [] }]\n        };\n\n        // Check if there is data for line chart\n        this.hasLineChartData = data.length > 0;\n        this.lineChartData = this.hasLineChartData\n          ? {\n            labels: data.map(d => new Date(d.timestamp).toLocaleString()),\n            datasets: [\n              { data: data.map(d => +d.temperature), label: 'Temperature' },\n              { data: data.map(d => d.ph), label: 'pH' },\n              { data: data.map(d => d.turbidity), label: 'Turbidity' }\n            ]\n          }\n          : { labels: [], datasets: [] };\n      },\n      error: (err) => {\n        console.error('Error fetching sensor data by location:', err);\n        this.hasPieChartData = false;\n        this.hasLineChartData = false;\n      }\n    });\n  }\n}\n","<h1>Statistics</h1>\n<div class=\"card-body\">\n  <div class=\"statistics-container\">\n    <!-- Buttons for Location Selection -->\n    <div class=\"location-buttons\">\n      <button *ngFor=\"let location of locations\"\n              (click)=\"onLocationSelect(location)\"\n              class=\"location-btn\">\n        {{ location.name }}\n      </button>\n    </div>\n\n    <!-- Main Content Area -->\n    <div class=\"content-area\">\n      <!-- Pie Chart Section -->\n      <div class=\"chart-container pie-chart-container\">\n        <h3>Water Quality Distribution</h3>\n        <div *ngIf=\"hasPieChartData; else noPieData\">\n          <canvas baseChart\n                  [data]=\"pieChartData\"\n                  [type]=\"'pie'\">\n          </canvas>\n        </div>\n        <ng-template #noPieData>\n          <div class=\"no-data-message\">No Data Available</div>\n        </ng-template>\n      </div>\n\n      <!-- Line Chart Section -->\n      <div class=\"chart-container line-chart-container\">\n        <h3>Water Quality Over Time</h3>\n        <div *ngIf=\"hasLineChartData; else noLineData\">\n          <canvas baseChart\n                  [data]=\"lineChartData\"\n                  [options]=\"lineChartOptions\"\n                  [type]=\"'line'\">\n          </canvas>\n        </div>\n        <ng-template #noLineData>\n          <div class=\"no-data-message\">No Data Available</div>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}